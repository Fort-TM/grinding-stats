
class Medals {
    array<Medal@> medals;

    Medals() {
        this.medals = array<Medal@>();
    }

    Medals(Json::Value@ medals_data) {
        //print medals_data;
        this.medals = array<Medal@>();
        print(Json::Write(medals_data));
        if (medals_data.Length == 0) {
            print("medals_data.Length == 0");
#if MP4 || TMNEXT
            print("MP4 || (TMNEXT && !DEPENDENCY_CHAMPIONMEDALS");
            medals_data = Json::Parse("[{\"medal\":0,\"achieved\":false,\"achieved_time\":\"0\"},{\"medal\":1,\"achieved\":false,\"achieved_time\":\"0\"},{\"medal\":2,\"achieved\":false,\"achieved_time\":\"0\"},{\"medal\":3,\"achieved\":false,\"achieved_time\":\"0\"}]");
#elif TMNEXT && DEPENDENCY_CHAMPIONMEDALS
            print("TMNEXT && DEPENDENCY_CHAMPIONMEDALS");
            medals_data = Json::Parse("[{\"medal\":0,\"achieved\":false,\"achieved_time\":\"0\"},{\"medal\":1,\"achieved\":false,\"achieved_time\":\"0\"},{\"medal\":2,\"achieved\":false,\"achieved_time\":\"0\"},{\"medal\":3,\"achieved\":false,\"achieved_time\":\"0\"},{\"medal\":9,\"achieved\":false,\"achieved_time\":\"0\"}]");
#elif TURBO
            print("TURBO");
            medals_data = Json::Parse("[{\"medal\":0,\"achieved\":false,\"achieved_time\":\"0\"},{\"medal\":1,\"achieved\":false,\"achieved_time\":\"0\"},{\"medal\":2,\"achieved\":false,\"achieved_time\":\"0\"},{\"medal\":4,\"achieved\":false,\"achieved_time\":\"0\"},{\"medal\":5,\"achieved\":false,\"achieved_time\":\"0\"},{\"medal\":6,\"achieved\":false,\"achieved_time\":\"0\"},{\"medal\":7,\"achieved\":false,\"achieved_time\":\"0\"},{\"medal\":8,\"achieved\":false,\"achieved_time\":\"0\"}]");
#endif
        }
        print(Json::Write(medals_data));
        for (uint i = 0; i < medals_data.Length; i++) {
            // print("i "+ i);
            Medal@ m = Medal(medals_data[i]);
            // print("created medal");
            print(m.target_time);
            // this.medals.InsertLast(m);
            // print(Json::Write(this.medals));
            // cast<array<Medal@>>(this.medals).InsertLast(m);
        }
    }

    Json::Value@ get_medals() {
        array<Json::Value> medal_jsons = array<Json::Value>();
        for (uint i = 0; i < medals.Length; i++) {
            medal_jsons.InsertLast(medals[i].get_medal_value());
        }
        return medal_jsons.ToJson();
    }

}